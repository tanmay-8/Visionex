// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  username  String   @unique
  birthDate DateTime @map("birth_date")
  password  String?
  isVerified Boolean @default(false) @map("is_verified")
  profileImageURL String? @map("profile_image_url")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ideas Idea[] 
  comments Comment[]
  @@map("users")
}

model Idea{
  id String @id @default(cuid())
  title String
  description String
  visit String?
  collaborators String[]
  ownerId String @map("owner_id")
  owner User @relation(fields: [ownerId], references: [id])
  images Image[]
  videos Video[]
  views Int @default(0)
  upvotes Int @default(0)
  comments Comment[]
  category String[]
  tags String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String?
  phone String?
  linkedin String?
  twitter String?
  instagram String?
  @@map("ideas")
}


model Comment{
  id String @id @default(cuid())
  userId String @map("user_id")
  text String
  ideaId String @map("idea_id")
  idea Idea @relation(fields: [ideaId], references: [id])
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("comments")
}

model Video{
  id String @id @default(cuid())
  url String
  description String
  ideaId String @map("idea_id")
  idea Idea @relation(fields: [ideaId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("videos")
}
model Image{
  id String @id @default(cuid())
  url String
  description String
  ideaId String @map("idea_id")
  idea Idea @relation(fields: [ideaId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("images")
}

model Otp{
  id String @id @default(cuid())
  email String
  otp String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("otps")
}